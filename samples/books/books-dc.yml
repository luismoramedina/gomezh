apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
  generation: 2
  labels:
    app: books
  name: books
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: books
    deploymentconfig: books
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        app: books
        deploymentconfig: books
    spec:
      containers:
      - image: luismoramedina/books
        imagePullPolicy: Always
        name: books
#        ports:
#        - containerPort: 8081
#          protocol: TCP
        env:
        - name: SERVER_PORT
          value: "8081"
        - name: DEBUG
          value: "true"
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - image: luismoramedina/gomezh
        imagePullPolicy: Always
        name: sidecar
        ports:
        - containerPort: 8080
          protocol: TCP
#        - containerPort: 8082
#          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: books
  labels:
    app: books
spec:
  selector:
    app: books
    deploymentconfig: books
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
---
apiVersion: v1
kind: Route
metadata:
  name: books
  labels:
    app: books
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: books